{"version":3,"sources":["components/card/Card.jsx","components/cardlist/card-list.component.jsx","components/search-box/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","name","email","id","className","alt","src","CardListComponent","monsters","map","SearchBox","type","placeholder","onChange","onSearch","App","useState","setMonsters","searchField","setSearchField","useEffect","fetch","then","resp","json","users","fileteredMonsters","filter","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAiBeA,EAdF,SAACC,GAAW,IAAD,EACMA,EAAMC,QAA1BC,EADc,EACdA,KAAMC,EADQ,EACRA,MAAOC,EADC,EACDA,GACrB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAA1B,4BAEL,6BAAKF,IACL,4BAAIC,QCGKK,EAVW,SAACR,GACzB,OACE,qBAAKK,UAAU,YAAf,SACGL,EAAMS,SAASC,KAAI,SAACT,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQG,UCKZO,G,MAXG,SAACX,GACjB,OACE,uBACEK,UAAU,SACVO,KAAK,SACLC,YAAab,EAAMa,YACnBC,SAAUd,EAAMe,aCsBPC,MA3Bf,WAAgB,IAAD,EACmBC,mBAAS,IAD5B,mBACNR,EADM,KACIS,EADJ,OAEyBD,mBAAS,IAFlC,mBAENE,EAFM,KAEOC,EAFP,KAGbC,qBAAU,WACRC,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OACvDA,EAAKC,OAAOF,MAAK,SAACG,GAAD,OAAWR,EAAYQ,WAEzC,CAACjB,IAEJ,IAAMkB,EAAoBlB,EAASmB,QAAO,SAAC3B,GAAD,OACxCA,EAAQC,KAAK2B,cAAcC,SAASX,EAAYU,kBAKlD,OACE,sBAAKxB,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEU,SAPuB,SAACgB,GAC5BX,EAAeW,EAAEC,OAAOC,QAOpBpB,YAAY,oBAEd,cAAC,EAAD,CAAmBJ,SAAUkB,QCdpBO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d8ccd89e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.css\";\n\nconst Card = (props) => {\n  const { name, email, id } = props.monster;\n  return (\n    <div className=\"card-container\">\n      <img\n        alt=\"monster\"\n        src={`https://robohash.org/${id}?set=set2&size=180x180`}\n      />\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import \"./card-list.styles.css\";\nimport React from \"react\";\n\nimport Card from \"../card/Card\";\n\nconst CardListComponent = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </div>\n  );\n};\n\nexport default CardListComponent;\n","import React from \"react\";\nimport \"./searchbox.css\";\n\nconst SearchBox = (props) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={props.placeholder}\n      onChange={props.onSearch}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport CardListComponent from \"./components/cardlist/card-list.component\";\nimport SearchBox from \"./components/search-box/SearchBox\";\nfunction App() {\n  const [monsters, setMonsters] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then((resp) =>\n      resp.json().then((users) => setMonsters(users))\n    );\n  }, [monsters]);\n\n  const fileteredMonsters = monsters.filter((monster) =>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n  );\n  const handleSearchMonsters = (e) => {\n    setSearchField(e.target.value);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n        onSearch={handleSearchMonsters}\n        placeholder=\"Search Monsters\"\n      />\n      <CardListComponent monsters={fileteredMonsters} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}